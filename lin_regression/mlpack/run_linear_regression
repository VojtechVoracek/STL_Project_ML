#!/bin/bash

echo "This program performs a split into training and test data, which are then stored in separate files."
echo "Further, this program fits a linear regression model with the training data and predicts the labels of the test data."


####################################################################################
# set default variables or overwrite them by setting flags.

# default values
testsize=0.2
verbose="" 

# read optional flags to set parameters
while getopts 't:v' OPTION;
do
    case "${OPTION}" in
        t) testsize=${OPTARG};;
        v) verbose="-v";;
    esac
done

####################################################################################
# # split the data into training and test sets and store the files into a folder called "prepared_datasets"
FEATURES_FILE=../../prepared_datasets/diabetes.data.csv
LABELS_FILE=../../prepared_datasets/diabetes.labels.csv

# create directory if it doesn't exist
mkdir -p preprocessed_data
mkdir -p predicted_data


mlpack_preprocess_split \
	-i $FEATURES_FILE \
	-I $LABELS_FILE \
	-t preprocessed_data/diabetes.data.train.csv \
	-l preprocessed_data/diabetes.labels.train.csv \
	-T preprocessed_data/diabetes.data.test.csv \
	-L preprocessed_data/diabetes.labels.test.csv \
	-r $testsize \
	$verbose

####################################################################################
# fit the linear regression model and predict the test dataset. Stores the predicted values into a folder called "predicted_data"

TRAINFEATURES_FILE=preprocessed_data/diabetes.data.train.csv
TRAINLABELS_FILE=preprocessed_data/diabetes.labels.train.csv

TESTFEATURES_FILE=preprocessed_data/diabetes.data.test.csv
TESTLABELS_FILE=preprocessed_data/diabetes.labels.test.csv

TESTLABELS_PREDIC_FILE=predicted_data/diabetes.labels.test.predicted.csv

mlpack_linear_regression \
	--training_file  $TRAINFEATURES_FILE\
	--training_responses_file $TRAINLABELS_FILE \
	--test_file $TESTFEATURES_FILE \
	--output_predictions_file $TESTLABELS_PREDIC_FILE \
	--output_model_file lin_regression_model.xml\
	$verbose

####################################################################################
# executes the accuracy calculation (Mean Squared Error) which has been implemented in C++
cd accuracy_calculation
./main
cd ..

